// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$facebook-hover-name: 'facebook-hover';
$facebook-hover-x: 38px;
$facebook-hover-y: 48px;
$facebook-hover-offset-x: -38px;
$facebook-hover-offset-y: -48px;
$facebook-hover-width: 17px;
$facebook-hover-height: 17px;
$facebook-hover-total-width: 128px;
$facebook-hover-total-height: 66px;
$facebook-hover-image: 'sprite.png';
$facebook-hover: (38px, 48px, -38px, -48px, 17px, 17px, 128px, 66px, 'sprite.png', 'facebook-hover', );
$facebook-name: 'facebook';
$facebook-x: 118px;
$facebook-y: 0px;
$facebook-offset-x: -118px;
$facebook-offset-y: 0px;
$facebook-width: 10px;
$facebook-height: 16px;
$facebook-total-width: 128px;
$facebook-total-height: 66px;
$facebook-image: 'sprite.png';
$facebook: (118px, 0px, -118px, 0px, 10px, 16px, 128px, 66px, 'sprite.png', 'facebook', );
$instagram-hover-name: 'instagram-hover';
$instagram-hover-x: 42px;
$instagram-hover-y: 0px;
$instagram-hover-offset-x: -42px;
$instagram-hover-offset-y: 0px;
$instagram-hover-width: 18px;
$instagram-hover-height: 19px;
$instagram-hover-total-width: 128px;
$instagram-hover-total-height: 66px;
$instagram-hover-image: 'sprite.png';
$instagram-hover: (42px, 0px, -42px, 0px, 18px, 19px, 128px, 66px, 'sprite.png', 'instagram-hover', );
$instagram-name: 'instagram';
$instagram-x: 80px;
$instagram-y: 0px;
$instagram-offset-x: -80px;
$instagram-offset-y: 0px;
$instagram-width: 18px;
$instagram-height: 18px;
$instagram-total-width: 128px;
$instagram-total-height: 66px;
$instagram-image: 'sprite.png';
$instagram: (80px, 0px, -80px, 0px, 18px, 18px, 128px, 66px, 'sprite.png', 'instagram', );
$play-icon-name: 'play-icon';
$play-icon-x: 0px;
$play-icon-y: 0px;
$play-icon-offset-x: 0px;
$play-icon-offset-y: 0px;
$play-icon-width: 22px;
$play-icon-height: 28px;
$play-icon-total-width: 128px;
$play-icon-total-height: 66px;
$play-icon-image: 'sprite.png';
$play-icon: (0px, 0px, 0px, 0px, 22px, 28px, 128px, 66px, 'sprite.png', 'play-icon', );
$twitter-hover-name: 'twitter-hover';
$twitter-hover-x: 75px;
$twitter-hover-y: 48px;
$twitter-hover-offset-x: -75px;
$twitter-hover-offset-y: -48px;
$twitter-hover-width: 18px;
$twitter-hover-height: 16px;
$twitter-hover-total-width: 128px;
$twitter-hover-total-height: 66px;
$twitter-hover-image: 'sprite.png';
$twitter-hover: (75px, 48px, -75px, -48px, 18px, 16px, 128px, 66px, 'sprite.png', 'twitter-hover', );
$twitter-name: 'twitter';
$twitter-x: 0px;
$twitter-y: 48px;
$twitter-offset-x: 0px;
$twitter-offset-y: -48px;
$twitter-width: 18px;
$twitter-height: 18px;
$twitter-total-width: 128px;
$twitter-total-height: 66px;
$twitter-image: 'sprite.png';
$twitter: (0px, 48px, 0px, -48px, 18px, 18px, 128px, 66px, 'sprite.png', 'twitter', );
$spritesheet-width: 128px;
$spritesheet-height: 66px;
$spritesheet-image: 'sprite.png';
$spritesheet-sprites: ($facebook-hover, $facebook, $instagram-hover, $instagram, $play-icon, $twitter-hover, $twitter, );
$spritesheet: (128px, 66px, 'sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
